services:
  keycloak-postgres:
    image: postgres
    container_name: keycloak-postgres
    restart: on-failure
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - 5433:5432
    deploy:
      resources:
        limits:
          memory: 256M

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://root:root@localhost:27017 --quiet || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongodb_gui:
    image: mongoclient/mongoclient
    container_name: mongodb_gui
    restart: always
    ports:
      - "3011:3000"
    depends_on:
      mongodb:
        condition: service_healthy

  keycloak: # https://habr.com/ru/articles/716232/
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    command:
      - start --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
    ports:
      - 8282:8080
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master"]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s

  translator:
    container_name: translator_service
    build: ./translator
    ports:
      - "3000:3000"
    networks:
      - backend
    volumes:
      - ./translator:/app

  translator-db:
    image: postgres
    container_name: translator-db
    restart: on-failure
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - 5434:5432
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    ports:
      - "9000:80"
    networks:
      - backend
    depends_on:
      - translator-db
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  autocomplete:
    container_name: autocomplete_service
    build: ./autocomplete
    ports:
      - "1000:1000"
    networks:
      - backend

networks:
  backend:

volumes:
  pgadmin-data: